# test-runner

Container based test running tools for Ruby applications

## Usage

```console
$ test-runner --help
test-runner 0.1.1

Usage:
  test-runner [options] REPO

Options:
  -c DIR --cache=DIR          Use the cache from DIR.
  -b BRANCH --branch=BRANCH   Use instead of the default. [default: master]
  -k KEY --ssh-key=KEY        Private key for accessing git. [default: /Users/gosuri/.ssh/id_rsa]
  -t CMD --test=CMD           Run tests with CMD. [default: rake]
  -p CMD --pre=CMD            Run CMD before running tests.
  --post=CMD                  Run CMD before after tests.
  --rm=false                  Always keep the containers after the run. [default: true]
  -n --name=NAME              Application name, autogenerated based on the git repo path.
  -e [VAR=VAL..]              Environment variables to set.
  -V --verbose                Run in verbose mode.
  -h --help                   Display this help message.
  -v --version                Display the version number.
```

## Requirements

### Ubuntu

* Git ~> 2.0.1
* Docker ~> 1.3.1

### MacOSX

* Boot2Docker 1.3.2 (Docker v1.3.2, Linux v3.16.7)
* Boot2Docker Management Tool v1.3.2
* Docker Client v1.3.2
* VirtualBox v4.3.18-r96516

## Installation

    $ git clone git@github.com:gosuri/test-runner.git
    $ cd test-runner
    $ make install

### MacOSX Instructions

Install docker using boot2docker. Instructions are available [here](http://docs.docker.com/installation/mac/)

#### Using Homebrew

    $ brew update
    $ brew install boot2docker
    $ boot2docker init
    $ boot2docker start
    $ $(boot2docker shellinit)

#### Using Installer

1. Download and run [Docker OSX Installer](http://docs.docker.com/installation/mac/)
2. Initialize Boot2Docker using the below:
```
$ boot2docker init
$ boot2docker start
$ $(boot2docker shellinit)
```
